{"version":3,"sources":["Components/Terminal/index.tsx","Helpers/index.ts","App/index.tsx","index.tsx"],"names":["Terminal","dark","commandList","welcome","commandNotFound","prompt","themes","default","themeBGColor","themeToolbarColor","themeColor","themePromptColor","theme","commands","welcomeMessage","errorMessage","showControlButtons","calcAge","bYear","bMonth","bDay","todayDate","Date","year","getFullYear","month","getMonth","day","getDate","age","GlobalStyle","createGlobalStyle","props","darkTheme","App","useState","setDarkTheme","data","setData","getInfo","info","replace","content","Object","entries","map","value","useEffect","a","fetch","then","res","json","jsonData","getData","years","message","ajuda","command","key","keys","length","ReactDOM","render","document","getElementById"],"mappings":"2OA2BeA,EAvBwB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,gBAAqC,IAApBC,cAAoB,MAAX,KAAW,EACvG,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,OAAQ,CACJC,QAAS,CACLC,aAAoBP,EAAO,UAAe,OAC1CQ,kBAAoBR,EAAO,UAAe,UAC1CS,WAAoBT,EAAO,OAAe,OAC1CU,iBAAoB,YAG5BC,MAAM,UACNC,SAAUX,EACVY,eAAgBX,EAChBY,aAAcX,EACdY,oBAAoB,EACpBX,OAAQA,OCrBXY,EAAU,SAACC,EAAgBC,EAAgBC,GACpD,IAAMC,EAAY,IAAIC,KAEhBC,EAAWF,EAAUG,cACrBC,EAAWJ,EAAUK,WAAa,EAClCC,EAAWN,EAAUO,UAEvBC,EAAMN,EAAOL,EAMjB,OAJGO,EAAQN,GAAUM,IAAUN,GAAUQ,EAAMP,IAC3CS,IAGGA,EAAM,EAAI,EAAIA,GC2DnBC,EAAcC,YAAH,yEAEK,SAAAC,GAAK,OAAKA,EAAMC,UAAY,OAAS,UAI5CC,EApEH,WACR,MAAkCC,oBAAS,GAA3C,mBAAOF,EAAP,KAAkBG,EAAlB,KACA,EAAwBD,mBAAgB,IAAxC,mBAAOE,EAAP,KAAaC,EAAb,KASMC,EAAU,SAACC,GAA0C,IAA3BC,EAA0B,uDAAhB,GAClCC,EAAUL,EAAKG,GAEnB,OAAIE,GAIDD,GACCE,OAAOC,QAAQH,GAASI,KAAI,SAACC,GACzBJ,EAAUA,EAAQD,QAAR,WAAoBK,EAAM,GAA1B,KAAiCA,EAAM,OAIlDJ,GATI,IAYfK,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACWC,MAAM,cAAcC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAD/C,OACNC,EADM,OAEZf,EAAQe,GAFI,2CAAH,qDAKbC,KACD,IAEH,IAAIpD,EAAwB,CACxB,cAAgBqC,EAAQ,cAAe,CAAEV,IAAKZ,EAAQ,KAAM,GAAI,MAChE,YAAgBsB,EAAQ,cAAe,CAAEgB,OAAQ,IAAIjC,MAAME,cAAgB,OAC3E,OAAgBe,EAAQ,UACxB,SAAgBA,EAAQ,YACxB,OAAgBA,EAAQ,UACxB,eAtCyB,WACzB,IAAMiB,EAAO,6BAAyBvB,EAAY,UAAc,YAGhE,OAFAG,GAAcH,GAEPuB,IA0CX,OALAtD,EAAW,2BACJA,GADI,IAEPuD,MAAM,aAAD,OAAed,OAAOC,QAAQ1C,GAAa2C,KAAI,SAACa,EAASC,GAAV,OAAkBA,IAAQhB,OAAOiB,KAAK1D,GAAa2D,OAAjC,UAA6CH,EAAQ,GAArD,iBAAkEA,EAAQ,UAG7I,qCACH,cAAC5B,EAAD,CAAaG,UAAWA,IACxB,cAAC,EAAD,CACIhC,KAAMgC,EACN/B,YAAaA,EACbC,QAAQ,+CACRC,gBAAgB,2CAChBC,OAAO,sBC/DnByD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,gB","file":"static/js/main.83046ecc.chunk.js","sourcesContent":["import { ReactTerminal, TerminalContextProvider } from 'react-terminal';\n\nimport { iTerminal } from './types';\n\nconst Terminal : React.FC<iTerminal> = ({ dark, commandList, welcome, commandNotFound, prompt = '$ ' }) => {\n    return (\n        <TerminalContextProvider>\n            <ReactTerminal\n                themes={{\n                    default: {\n                        themeBGColor:       dark ? '#1E1E1E'    : '#fff',\n                        themeToolbarColor:  dark ? '#282828'    : '#DDD9D6',\n                        themeColor:         dark ? '#fff'       : '#000',\n                        themePromptColor:   '#558417',\n                    }\n                }}\n                theme=\"default\"\n                commands={commandList}\n                welcomeMessage={welcome}\n                errorMessage={commandNotFound}\n                showControlButtons={false}\n                prompt={prompt}\n            />\n        </TerminalContextProvider>\n    );\n};\n\nexport default Terminal;","export const calcAge = (bYear : number, bMonth: number, bDay: number) : number => {\n    const todayDate = new Date;\n    \n    const year     = todayDate.getFullYear();\n    const month    = todayDate.getMonth() + 1;\n    const day      = todayDate.getDate();\n\n    let age = year - bYear;\n\n    if(month < bMonth || month === bMonth && day < bDay) {\n        age--;\n    }\n\n    return age < 0 ? 0 : age;\n};","import { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Terminal from '../Components/Terminal';\n\nimport { Command } from '../Components/Terminal/types';\n\nimport { calcAge } from '../Helpers';\n\nimport { iData } from './types';\n\nconst App = () => {\n    const [darkTheme, setDarkTheme] = useState(false);\n    const [data, setData] = useState<iData>({});\n\n    const onChangeThemeCommand = () => {\n        const message = `Tema alterado para ${darkTheme ? '\\'claro\\'' : '\\'escuro\\''}`;\n        setDarkTheme(!darkTheme);\n\n        return message;\n    };\n\n    const getInfo = (info : string, replace = {}) : string => {\n        let content = data[info];\n\n        if(!content) {\n            return '';\n        }\n\n        if(replace) {\n            Object.entries(replace).map((value : Array<any>) => {\n                content = content.replace(`{${value[0]}}`, value[1]);\n            });\n        }\n\n        return content;\n    };\n\n    useEffect(() => {\n        const getData = async () => {\n            const jsonData = await fetch('/info.json').then(res => res.json());\n            setData(jsonData);\n        };\n\n        getData();\n    }, []);\n\n    let commandList : Command = {\n        'quem-sou-eu':  getInfo('quem-sou-eu', { age: calcAge(1991, 12, 21)}),\n        'experiencia':  getInfo('experiencia', { years: (new Date).getFullYear() - 2015 }),\n        'skills':       getInfo('skills'),\n        'linkedin':     getInfo('linkedin'),\n        'github':       getInfo('github'),\n        'alterar-tema': onChangeThemeCommand,\n    };\n\n    commandList = {\n        ...commandList,\n        ajuda: `Comandos: ${Object.entries(commandList).map((command, key) => key === Object.keys(commandList).length ? `${command[0]}, ` : ` ${command[0]}`)}`\n    };\n\n    return <>\n        <GlobalStyle darkTheme={darkTheme} />\n        <Terminal\n            dark={darkTheme}\n            commandList={commandList}\n            welcome=\"Bem vindo! Para começar, digite: 'ajuda' \"\n            commandNotFound=\"Comando não encontrado. Tente 'ajuda'\"\n            prompt=\"ruan@site:~$ \"\n        />\n    </>;\n};\n\nconst GlobalStyle = createGlobalStyle<{ darkTheme: boolean }>`\n    body {\n        background: ${props => (props.darkTheme ? '#333' : '#eee')};\n    }\n`;\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('container'));"],"sourceRoot":""}