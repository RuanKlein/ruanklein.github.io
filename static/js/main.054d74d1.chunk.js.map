{"version":3,"sources":["Components/Terminal/index.tsx","Helpers/Device.ts","App/index.tsx","index.tsx"],"names":["Terminal","dark","commandList","welcome","commandNotFound","prompt","showControlButton","themes","default","themeBGColor","themeToolbarColor","themeColor","themePromptColor","theme","commands","welcomeMessage","errorMessage","showControlButtons","getOperatingSystem","identification","navigator","appVersion","toLowerCase","indexOf","getBrowser","userAgent","getPublicIp","a","fetch","response","text","ip","match","App","useState","darkTheme","setDarkTheme","setWelcomeMessage","useEffect","browser","os","Date","toLocaleString","fetchData","document","body","style","background","JSON","stringify","name","state","city","skills","social","linkedin","github","prev","help","ReactDOM","render","getElementById"],"mappings":"+MAkCeA,EA9BwB,SAAC,GAOjC,IAAD,IANJC,YAMI,SALJC,EAKI,EALJA,YAKI,IAJJC,eAII,MAJM,GAIN,MAHJC,uBAGI,MAHc,oBAGd,MAFJC,cAEI,MAFK,UAEL,MADJC,yBACI,SACJ,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,OAAQ,CACNC,QAAS,CACPC,aAAcR,EAAO,UAAY,OACjCS,kBAAmBT,EAAO,UAAY,UACtCU,WAAYV,EAAO,OAAS,OAC5BW,iBAAkB,YAGtBC,MAAM,UACNC,SAAUZ,EACVa,eAAgBZ,EAChBa,aAAcZ,EACda,mBAAoBX,EACpBD,OAAQA,OC5BHa,EAAqB,WAC9B,IAAMC,EAAiBC,UAAUC,WAAWC,cAE5C,OAAsC,IAAnCH,EAAeI,QAAQ,OAAwB,cACZ,IAAnCJ,EAAeI,QAAQ,OAAwB,SACR,IAAvCJ,EAAeI,QAAQ,WAA4B,cAChB,IAAnCJ,EAAeI,QAAQ,OAAwB,OACV,IAArCJ,EAAeI,QAAQ,SAA0B,YACd,IAAnCJ,EAAeI,QAAQ,OAAwB,UAE3C,cAGEC,EAAa,WACtB,IAAML,EAAiBC,UAAUK,UAAUH,cAE3C,OAAwC,IAArCH,EAAeI,QAAQ,SAA0B,SACX,IAAtCJ,EAAeI,QAAQ,UAA2B,UACZ,IAAtCJ,EAAeI,QAAQ,UAA2B,UACX,IAAvCJ,EAAeI,QAAQ,WAA4B,WACf,IAApCJ,EAAeI,QAAQ,QAAyB,OAE5C,mBAGEG,EAAW,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,4CADN,cACjBC,EADiB,gBAELA,EAASC,OAFJ,cAEjBC,EAFiB,OAEYC,MAAM,+CAFlB,kBAIhBD,EAAKA,EAAG,GAAK,cAJG,2CAAH,qDCgCTE,EAnDH,WACR,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,mBAAS,IAArD,mBAAOnB,EAAP,KAAuBsB,EAAvB,KAEAC,qBAAU,YACS,uCAAG,gCAAAX,EAAA,sEACGD,IADH,OACRK,EADQ,OAERQ,EAAUf,IACVgB,EAAKtB,IAEXmB,EAAkB,IAAD,QAAK,IAAII,MAAOC,iBAAhB,gBAAwCX,EAAxC,aAA+CQ,EAA/C,iBAA+DC,EAA/D,MALH,2CAAH,qDAOfG,KACD,IAEHL,qBAAU,WACNM,SAASC,KAAKC,MAAMC,WAAaZ,EAAY,OAAS,SACvD,CAACA,IAEJ,IAkBMjC,EAA4B,CAC9B,WAdc,WACd,OAAO8C,KAAKC,UAAU,CAClBC,KAAM,OACNC,MAAO,YACPC,KAAM,WACNC,OAAQ,CAAC,aAAc,aAAc,UAAW,WAAY,MAAO,gBACnEC,OAAQ,CACJC,SAAU,yCACVC,OAAQ,mCAOhB,eApByB,WAEzB,OADApB,GAAa,SAAAqB,GAAI,OAAKA,KAChB,qBAAN,OAA4BtB,EAAY,QAAU,OAAlD,MAmBAuB,KAAM,2CAGV,OAAO,cAAC,EAAD,CACCzD,KAAMkC,EACNjC,YAAaA,EACbE,gBAAgB,8DAChBD,QAASY,KCjDrB4C,IAASC,OAAO,cAAC,EAAD,IAAShB,SAASiB,eAAe,gB","file":"static/js/main.054d74d1.chunk.js","sourcesContent":["import { ReactTerminal, TerminalContextProvider } from 'react-terminal';\n\nimport { iTerminal } from './types';\n\nconst Terminal : React.FC<iTerminal> = ({\n  dark = false,\n  commandList,\n  welcome = '',\n  commandNotFound = 'Command not found',\n  prompt = '➜ ',\n  showControlButton = false\n}) => {\n  return (\n    <TerminalContextProvider>\n      <ReactTerminal\n        themes={{\n          default: {\n            themeBGColor: dark ? '#1E1E1E' : '#fff',\n            themeToolbarColor: dark ? '#282828' : '#DDD9D6',\n            themeColor: dark ? '#fff' : '#000',\n            themePromptColor: '#558417',\n          },\n        }}\n        theme=\"default\"\n        commands={commandList}\n        welcomeMessage={welcome}\n        errorMessage={commandNotFound}\n        showControlButtons={showControlButton}\n        prompt={prompt}\n      />\n    </TerminalContextProvider>\n  );\n};\n\nexport default Terminal;\n","export const getOperatingSystem = () => {\n    const identification = navigator.appVersion.toLowerCase();\n\n    if(identification.indexOf('win') !== -1) { return 'Windows OS'; }\n    if(identification.indexOf('mac') !== -1) { return 'macOS'; }\n    if(identification.indexOf('android') !== -1) { return 'Android OS'; }\n    if(identification.indexOf('ios') !== -1) { return 'iOS'; }\n    if(identification.indexOf('linux') !== -1) { return 'Linux OS'; }\n    if(identification.indexOf('x11') !== -1) { return 'UNIX OS'; }\n\n    return 'Unknown OS';\n};\n\nexport const getBrowser = () => {\n    const identification = navigator.userAgent.toLowerCase();\n\n    if(identification.indexOf('opera') !== -1) { return 'Opera'; }\n    if(identification.indexOf('chrome') !== -1) { return 'Chrome'; }\n    if(identification.indexOf('safari') !== -1) { return 'Safari'; }\n    if(identification.indexOf('firefox') !== -1) { return 'Firefox'; }\n    if(identification.indexOf('edge') !== -1) { return 'Edge'; }\n\n    return 'Unknown Browser';\n};\n\nexport const getPublicIp = async () => {\n    const response = await fetch('https://www.cloudflare.com/cdn-cgi/trace');\n    const ip = (await response.text()).match(/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/);\n\n    return ip ? ip[0] : 'Unknown IP';\n};","import { useState, useEffect } from 'react';\n\nimport Terminal from '../Components/Terminal';\nimport { CommandType } from '../Components/Terminal/types';\nimport { getBrowser, getOperatingSystem, getPublicIp } from '../Helpers/Device';\n\nconst App = () => {\n    const [darkTheme, setDarkTheme] = useState(false);\n    const [welcomeMessage, setWelcomeMessage] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const ip = await getPublicIp();\n            const browser = getBrowser();\n            const os = getOperatingSystem();\n\n            setWelcomeMessage(`[${new Date().toLocaleString()}] IP ${ip}, ${browser} from ${os} `);\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        document.body.style.background = darkTheme ? '#333' : '#eee';\n    }, [darkTheme]);\n\n    const onChangeThemeCommand = () => {\n        setDarkTheme(prev => !prev);\n        return `theme changed to '${darkTheme ? 'light' : 'dark'}'`;\n    };\n\n    const onAboutMe = () => {\n        return JSON.stringify({\n            name: 'Ruan',\n            state: 'Paraná',\n            city: 'Curitiba',\n            skills: ['JavaScript', 'TypeScript', 'Node.js', 'React.js', 'PHP', 'Shell Script'],\n            social: {\n                linkedin: 'https://www.linkedin.com/in/ruanklein/',\n                github: 'https://github.com/RuanKlein'\n            }\n        });\n    };\n\n    const commandList : CommandType = {\n        'about-me': onAboutMe,\n        'change-theme': onChangeThemeCommand,\n        help: 'Commands: about-me, change-theme, clear'\n    };\n\n    return <Terminal\n            dark={darkTheme}\n            commandList={commandList}\n            commandNotFound=\"Command not found. Type 'help' to print available commands.\"\n            welcome={welcomeMessage}\n    />;\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('container'));"],"sourceRoot":""}